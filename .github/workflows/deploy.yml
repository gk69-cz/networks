# .github/workflows/deploy.yml

name: Deploy HTML App with Terraform, Ansible, and Docker

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  deploy:
    name: Deploy with Terraform and Ansible
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      # Initialize Terraform
      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      # Terraform Plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: terraform

      # Terraform Apply
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        working-directory: terraform

      - name: Retrieve Public IP from Azure
        id: get_public_ip
        run: |
         PUBLIC_IP=$(az network public-ip show \
            --resource-group Network-RG1 \
            --name Network-PIP \
            --query ipAddress -o tsv)
          vm_name=$(terraform output -raw vm_name)  
          echo "public_ip=${PUBLIC_IP}" >> $GITHUB_ENV

      # Set up Ansible
      - name: Install Ansible
        run: sudo apt-get install -y ansible

      # Configure Ansible Inventory
      - name: Configure Ansible Inventory
        run: |
          echo "[azure_vm]" > inventory
          echo "${{ env.public_ip }} ansible_user=azureuser ansible_password=${{ secrets.ADMIN_PASSWORD }} ansible_ssh_common_args='-o StrictHostKeyChecking=no'" >> inventory
      # - name: Ensure Python 3 is Installed on VM
      #   uses: docker://cytopia/ansible:latest
      #   with:
      #     args: >
      #         ansible-playbook -i inventory -c paramiko -e "ansible_user=azureuser"
      #         -e "ansible_password=${{ secrets.AZURE_VM_PASSWORD }}" 
      #         -e "ansible_ssh_common_args='-o StrictHostKeyChecking=no'"
      #         -e "ansible_python_interpreter=/usr/bin/python3"
      #         - <<'EOF'
      #         ---
      #         - name: Ensure Python 3 is installed
      #           hosts: azure_vm
      #           gather_facts: false
      #           tasks:
      #             - name: Install Python 3 on the VM using raw command
      #               raw: |
      #                 sudo apt-get update -y
      #                 sudo apt-get install -y python3 python3-apt
      #         EOF
    
      - name: Run Ansible Playbook for Deployment
        uses: docker://cytopia/ansible:latest
        with:
          args: >
            /bin/sh -c "
            apt-get update && apt-get install -y sshpass &&
            ansible-playbook -i inventory ansible-playbook.yml 
            "  

